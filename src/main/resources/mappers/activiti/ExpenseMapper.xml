<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.OA.dao.ExpenseMapper" >
  <resultMap id="BaseResultMap" type="com.example.OA.model.Expense" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="application" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="application_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="money" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="processInstanceId" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="businessType" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="businessKey" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, application, application_name, money, processInstanceId, remark, status, businessType, 
    businessKey, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from expense
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from expense
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.OA.model.Expense" >
    insert into expense (id, application, application_name, 
      money, processInstanceId, remark, 
      status, businessType, businessKey, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{application,jdbcType=INTEGER}, #{applicationName,jdbcType=VARCHAR}, 
      #{money,jdbcType=DECIMAL}, #{processinstanceid,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{businesstype,jdbcType=VARCHAR}, #{businesskey,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.OA.model.Expense" >
    insert into expense
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="application != null" >
        application,
      </if>
      <if test="applicationName != null" >
        application_name,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="processinstanceid != null" >
        processInstanceId,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="businesstype != null" >
        businessType,
      </if>
      <if test="businesskey != null" >
        businessKey,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="application != null" >
        #{application,jdbcType=INTEGER},
      </if>
      <if test="applicationName != null" >
        #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="processinstanceid != null" >
        #{processinstanceid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="businesstype != null" >
        #{businesstype,jdbcType=VARCHAR},
      </if>
      <if test="businesskey != null" >
        #{businesskey,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.OA.model.Expense" >
    update expense
    <set >
      <if test="application != null" >
        application = #{application,jdbcType=INTEGER},
      </if>
      <if test="applicationName != null" >
        application_name = #{applicationName,jdbcType=VARCHAR},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="processinstanceid != null" >
        processInstanceId = #{processinstanceid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="businesstype != null" >
        businessType = #{businesstype,jdbcType=VARCHAR},
      </if>
      <if test="businesskey != null" >
        businessKey = #{businesskey,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.OA.model.Expense" >
    update expense
    set application = #{application,jdbcType=INTEGER},
      application_name = #{applicationName,jdbcType=VARCHAR},
      money = #{money,jdbcType=DECIMAL},
      processInstanceId = #{processinstanceid,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      businessType = #{businesstype,jdbcType=VARCHAR},
      businessKey = #{businesskey,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>